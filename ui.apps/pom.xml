<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <parent>
        <artifactId>parent</artifactId>
        <groupId>com.omnigon.aem</groupId>
        <version>1.0-SNAPSHOT</version>
    </parent>
    <modelVersion>4.0.0</modelVersion>

    <artifactId>apps</artifactId>
    <packaging>content-package</packaging>
    <name>Omnigon AEM - UI Components</name>
    <description>UI Components package for Omnigon AEM</description>

    <dependencies>

        <!-- These dependencies will be embedded -->
        <dependency>
            <groupId>com.omnigon.aem</groupId>
            <artifactId>commons</artifactId>
            <version>${project.version}</version>
            <scope>provided</scope>
        </dependency>

        <dependency>
            <groupId>com.omnigon.aem</groupId>
            <artifactId>main</artifactId>
            <version>${project.version}</version>
            <scope>provided</scope>
        </dependency>

        <!-- This is only required for CQ Component Plugin to avoid ReflectionUtils fail
        if classes from this bundle are imported in a model class-->
        <dependency>
            <groupId>com.omnigon.aem</groupId>
            <artifactId>handlebars-core</artifactId>
            <version>${project.version}</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>com.omnigon.aem</groupId>
            <artifactId>handlebars-apps</artifactId>
            <version>${project.version}</version>
            <type>content-package</type>
        </dependency>

        <!-- This is only required for CQ Component Plugin to avoid ReflectionUtils fail
        if classes from this bundle are imported in a model class-->
        <dependency>
            <groupId>com.omnigon.aem</groupId>
            <artifactId>cloudinary-core</artifactId>
            <version>${project.version}</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>com.omnigon.aem</groupId>
            <artifactId>cloudinary-apps</artifactId>
            <version>${project.version}</version>
            <type>content-package</type>
        </dependency>

        <dependency>
            <groupId>javax.jcr</groupId>
            <artifactId>jcr</artifactId>
        </dependency>

        <dependency>
            <groupId>javax.servlet</groupId>
            <artifactId>servlet-api</artifactId>
        </dependency>

        <dependency>
            <groupId>com.day.cq.wcm</groupId>
            <artifactId>cq-wcm-taglib</artifactId>
        </dependency>

        <dependency>
            <groupId>com.adobe.aem</groupId>
            <artifactId>uber-jar</artifactId>
            <classifier>apis</classifier>
        </dependency>

        <dependency>
            <groupId>com.adobe.acs</groupId>
            <artifactId>acs-aem-commons-content</artifactId>
            <type>content-package</type>
        </dependency>

    </dependencies>

    <!-- ====================================================================== -->
    <!-- B U I L D   D E F I N I T I O N                                        -->
    <!-- ====================================================================== -->
    <build>
        <resources>
            <!-- define the resources that will go into the package -->
            <resource>
                <!--
                    we want to keep some of the META-INF files and not configure
                    everything in the plugin.
                -->
                <directory>${basedir}/src/main/content/META-INF</directory>
                <targetPath>../vault-work/META-INF</targetPath>
            </resource>
            <resource>
                <directory>${basedir}/src/main/content/jcr_root</directory>
                <excludes>
                    <!-- exclude .vlt control files in the package -->
                    <exclude>**/.vlt</exclude>
                    <exclude>**/.vltignore</exclude>
                    <exclude>**/.gitignore</exclude>
                    <exclude>**/*.iml</exclude>
                    <exclude>**/.classpath</exclude>
                    <exclude>**/.project</exclude>
                    <exclude>**/.settings</exclude>
                    <exclude>**/.DS_Store</exclude>
                    <exclude>**/target/**</exclude>
                    <exclude>**/pom.xml</exclude>
                </excludes>
            </resource>
        </resources>
        <plugins>
            <!--
                we want to keep some of the META-INF files and not configure
                everything in the plugin (mainly the filters).
                copy the resource explicitly instead of attaching it to the default resources
            -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-resources-plugin</artifactId>
            </plugin>

            <!-- ====================================================================== -->
            <!-- V A U L T   P A C K A G E   P L U G I N                                -->
            <!-- ====================================================================== -->
            <plugin>
                <groupId>com.day.jcr.vault</groupId>
                <artifactId>content-package-maven-plugin</artifactId>
                <extensions>true</extensions>
                <executions>
                    <execution>
                        <id>install-package</id>
                        <goals>
                            <goal>install</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <properties>
                        <acHandling>merge_preserve</acHandling>
                    </properties>
                    <requiresRoot>true</requiresRoot>
                    <embeddeds>
                        <embedded>
                            <groupId>com.omnigon.aem</groupId>
                            <artifactId>commons</artifactId>
                            <target>${install.folder}</target>
                        </embedded>
                        <embedded>
                            <groupId>com.omnigon.aem</groupId>
                            <artifactId>main</artifactId>
                            <target>${install.folder}</target>
                        </embedded>
                        <embedded>
                            <groupId>com.citytechinc.cq.cq-component-plugin</groupId>
                            <artifactId>cq-component-annotations</artifactId>
                            <target>${install.folder}</target>
                        </embedded>
                    </embeddeds>
                    <subPackages>
                        <subPackage>
                            <groupId>com.adobe.acs</groupId>
                            <artifactId>acs-aem-commons-content</artifactId>
                            <filter>true</filter>
                        </subPackage>
                        <subPackage>
                            <groupId>com.omnigon.aem</groupId>
                            <artifactId>cloudinary-apps</artifactId>
                            <filter>true</filter>
                        </subPackage>
                        <subPackage>
                            <groupId>com.omnigon.aem</groupId>
                            <artifactId>handlebars-apps</artifactId>
                            <filter>true</filter>
                        </subPackage>
                    </subPackages>
                </configuration>
            </plugin>

            <!-- CQ Component Plugin -->
            <plugin>
                <groupId>com.citytechinc.cq.cq-component-plugin</groupId>
                <artifactId>cq-component-maven-plugin</artifactId>
                <extensions>true</extensions>
                <executions>
                    <execution>
                        <id>process-components</id>
                        <phase>package</phase>
                        <goals>
                            <goal>component</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <!-- NB: this plugins follows aem-maven-archetype generated structure
                     where components are in /content subdirectory. This plugin appends "content" if
                     comonentPathSuffix is empty, "." or "/" does not work as well. The only solution is to
                     use "components" as a suffix. Component Group can be overriden on component level.
                     -->
                    <componentPathBase>jcr_root/apps/omnigon</componentPathBase>
                    <componentPathSuffix>components</componentPathSuffix>
                    <defaultComponentGroup>Omnigon</defaultComponentGroup>
                    <transformerName>lower-case-dash</transformerName>
                    <generateTouchUiDialogs>true</generateTouchUiDialogs>
                    <additionalFeatures>
                        <additionalFeature>hiddenfieldwidget</additionalFeature>
                    </additionalFeatures>
                </configuration>
            </plugin>

        </plugins>
    </build>

</project>